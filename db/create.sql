-- Feel free to modify this file to match your development goal.
-- Here we only create 3 tables for demo purpose.

CREATE TABLE Users (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    address VARCHAR(255),
    balance NUMERIC(12, 2) DEFAULT 0.00
);

CREATE TABLE Category (
	name VARCHAR(256) NOT NULL PRIMARY KEY,
	description VARCHAR(256) NOT NULL
);

CREATE TABLE Products (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(256) NOT NULL REFERENCES Category(name),
    description VARCHAR(4096) NOT NULL,
    image VARCHAR(256) NOT NULL
);

CREATE TABLE ProductReview(
    uid INT NOT NULL REFERENCES Users(id),
    pid INT NOT NULL REFERENCES Products(id),
    rating DECIMAL(2,1) NOT NULL,
    description VARCHAR(255),
    review_time DATE,
    like_num INT NOT NULL,
    filename VARCHAR(255),
    PRIMARY KEY(uid, pid)

);

CREATE TABLE SellerReview(
    uid INT NOT NULL REFERENCES Users(id),
    sid INT NOT NULL REFERENCES Users(id),
    rating DECIMAL(2,1) NOT NULL,
    description VARCHAR(255),
    review_time DATE,
    like_num INT NOT NULL,
	PRIMARY KEY(uid, sid)
);

CREATE TABLE Sellers(
    uid INT NOT NULL REFERENCES Users(id),
    pid INT NOT NULL REFERENCES Products(id),
    quantity INT NOT NULL,
    price DECIMAL NOT NULL,
    PRIMARY KEY(uid, pid)
);

CREATE VIEW ProductSummary AS
WITH seller_info AS (
    SELECT pid, COUNT(*) AS seller_num, AVG(price) AS avg_price, SUM(quantity) as total_quantity
    FROM Sellers
    GROUP BY pid
)
SELECT p.id AS pid, p.name, p.category, p.description, p.image, COALESCE(s.seller_num, 0) AS seller_num, s.avg_price, COALESCE(s.total_quantity, 0) AS total_quantity
FROM Products p FULL OUTER JOIN seller_info s ON p.id = s.pid;

CREATE TABLE Orders (
    id INT NOT NULL PRIMARY KEY,
    buyer_uid INT NOT NULL REFERENCES Users(id),
    seller_uid INT NOT NULL REFERENCES Users(id),
    pid INT NOT NULL REFERENCES Products(id),
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL CHECK(price >= 0),
    time_purchased timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    fulfilled BOOLEAN
);

CREATE TABLE Cart (
    uid INT NOT NULL REFERENCES Users(id),
    sid INT NOT NULL REFERENCES Users(id),
    pid INT NOT NULL REFERENCES Products(id),
    quantity INT NOT NULL CHECK(quantity >= 0),
    price DECIMAL(10, 2) NOT NULL CHECK(price >= 0),
	PRIMARY KEY(uid, sid, pid)
);

CREATE TABLE Code (
    uid INT NOT NULL REFERENCES Users(id),
    code VARCHAR(256) NOT NULL,
    status INT NOT NULL,
    PRIMARY KEY(uid, code, status)
)
